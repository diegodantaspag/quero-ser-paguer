swagger: "2.0"
info:
  version: 1.0.0
  title: Customer Service
  description: A sample API Customer
  contact:
    name: Igor
    email: igormgomes94@gmail.com
host: localhost:8080
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /customer:
    post:
      description: Creates a new Customer register
      operationId: save
      parameters:
        - name: customer
          in: body
          description: Customer to add
          required: true
          schema:
            $ref: '#/definitions/CustomerRequest'
      responses:
        "201":
          description: Created register
        "400":
          description: Invalid parameter
          schema:
            $ref: '#/definitions/ErrorMessage'
        "412":
          description: Customer already registered
          schema:
            $ref: '#/definitions/ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
    get:
      description: Find customers
      operationId: findAll
      responses:
        "200":
          description: Customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerResponse'
        "404":
          description: Customers not found
          schema:
            $ref: '#/definitions/ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
  /customer/{id}:
    get:
      description: Find customers
      operationId: findById
      parameters:
        - name: id
          in: path
          description: ID of customer to fetch
          required: true
          type: string
      responses:
        "200":
          description: Customer response
          schema:
            $ref: '#/definitions/CustomerResponse'
        "404":
          description: Customers not found
          schema:
            $ref: '#/definitions/ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      description: Update customer
      operationId: updateById
      parameters:
        - name: id
          in: path
          description: ID of customer to fetch
          required: true
          type: string
        - name: customer
          in: body
          description: Customer to add
          required: true
          schema:
            $ref: '#/definitions/CustomerRequest'
      responses:
        "204":
          description: Customer response
        "412":
          description: Customer not found
          schema:
            $ref: '#/definitions/ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
    delete:
      description: Delete customer
      operationId: deleteById
      parameters:
        - name: id
          in: path
          description: ID of customer to fetch
          required: true
          type: string
      responses:
        "204":
          description: Customer response
        "412":
          description: Customer not found
          schema:
            $ref: '#/definitions/ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'

definitions:
  CustomerRequest:
    required:
      - name
      - document
      - birthDate
    properties:
      name:
        type: string
        example: John
        minLength: 1
      document:
        type: string
        example: 123.311.123.09
        minLength: 10
      birthDate:
        type: string
        format: date
        example: 2019-01-01
  CustomerResponse:
    required:
      - id
      - name
      - document
      - birthDate
    properties:
      id:
        type: string
        example: 5ce16d6de0cb44053231aa1e
      name:
        type: string
        example: John
      document:
        type: string
        example: 123.311.123.09
      birthDate:
        type: string
        format: date
        example: 2019-01-01

  ErrorMessage:
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          type: string