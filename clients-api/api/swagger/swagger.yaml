swagger: "2.0"
info:
  version: "0.0.1"
  title: Orders API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
tags:
  - name: "Cliente"
    description: "Requisições relacionadas a clientes"
    # externalDocs:
    # description: "Leia mais"
    # url: ""
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /client:
    # binds a127 app logic to a route
    x-swagger-router-controller: client
    post:
      description: Cria um novo usuario/cliente na base
      # used as the method name of the controller
      operationId: createClient
      tags:
        - "Cliente" 
      parameters:
        - in: body
          name: cliente
          description: Cliente que será criado
          schema:
             $ref: "#/definitions/Cliente"                                               
      responses:
        "200":
          description: Created
          schema:
             $ref: "#/definitions/Cliente"
        "400":
          description: Bad request
          schema:
           type: array
           items:
             $ref: "#/definitions/ErrorResponse"                        
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      field:
        type: string
      type:
        type: string
        enum:
          - REQUEST_INVALID_FORMAT
          - BUSINESS_VALIDATION
        description: >
          Possivéis tipos de erro:
              `REQUEST_INVALID_FORMAT` - Há um paramêtro com erro na requisição 
              `BUSINESS_VALIDATION` - A requisição não passou em alguma regra de negócio
              `UNHANDLED_REQUEST_ERROR` - Erro interno de servidor
  Cliente:
    description: Dados de um cliente 
    required:
      - cpf
      - email
    properties:
      nome:
        type: string
        description: Nome do cliente que será criado
      cpf:
        type: string
        description:  CPF do cliente 
      data_nascimento:
        type: string
        description:  Data de nascimento do cliente
      email:
        type: string
        description: Email do cliente que será usado para login no cognito
        format: email
      password:
        type: string
        description: Senha do usuário que será criado no cognito 
      username:
        type: string
        description: Username que será criado no cognito
      phoneNumber:
        type: string
        description: Numero de telefone do cliente
  ClientePostResponse:
    properties:
      id:
        type: string
        description: Id do cliente criado