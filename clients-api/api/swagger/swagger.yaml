swagger: "2.0"
info:
  version: "0.0.1"
  title: Orders API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
tags:
  - name: "Cliente"
    description: "Requisições relacionadas a clientes"
  - name: "Autenticação"
    description: "Requisições relacionadas a autenticação"
    # externalDocs:
    # description: "Leia mais"
    # url: ""
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /client:
    # binds a127 app logic to a route
    x-swagger-router-controller: client
    post:
      description: Cria um novo usuario/cliente na base
      # used as the method name of the controller
      operationId: createClient
      tags:
        - "Cliente" 
      parameters:
        - in: body
          name: cliente
          description: Cliente que será criado
          schema:
             $ref: "#/definitions/Cliente"                                               
      responses:
        "200":
          description: Created
          schema:
             $ref: "#/definitions/Cliente"
        "400":
          description: Bad request
          schema:
           type: array
           items:
             $ref: "#/definitions/ErrorResponse"
  /client/{uuid}:
    get:
      x-swagger-router-controller: client
      description: Cria um novo usuario/cliente na base
      # used as the method name of the controller
      operationId: getClientById
      tags:
        - "Cliente" 
      parameters:
        - in: path
          name: uuid   # Note the name is the same as in the path
          required: true
          type: string
          format: uuid
          description: Identificador universal unico do usuário                                                 
      responses:
          "200":
            description: Cliente 
            schema:
              $ref: "#/definitions/Cliente"
          "204":
            description: Cliente não encontrado 
          "400":
            description: Bad request
            schema:
              type: array
              items:
                $ref: "#/definitions/ErrorResponse"
          "500":
            description: Internal error
            schema:
              type: array
              items:
                $ref: "#/definitions/ErrorResponse"
  /clients:
    get:
      x-swagger-router-controller: client
      description: Busca uma lista de usuários na base
      # used as the method name of the controller
      operationId: listClients
      tags:
        - "Cliente" 
      parameters:
        - in: query
          name: limit   # Note the name is the same as in the path
          required: true
          type: integer
          description: Limite de resultados
        - in: query
          name: offset   # Note the name is the same as in the path
          required: true
          type: integer
          description: Página                                       
      responses:
          "200":
            description: Cliente 
            schema:
              type: array
              items:
                $ref: "#/definitions/ResponseListClient"
          "204":
            description: Cliente não encontrado 
          "400":
            description: Bad request
            schema:
              type: array
              items:
                $ref: "#/definitions/ErrorResponse"
          "500":
            description: Internal error
            schema:
              type: array
              items:
                $ref: "#/definitions/ErrorResponse"                
  /login:
      # binds a127 app logic to a route
    x-swagger-router-controller: auth
    post:
      description: Autentica um usuário
        # used as the method name of the controller
      operationId: login
      tags:
          - "Autenticação" 
      parameters:
          - in: body
            name: auth
            description: Dados de login e senha do usuário
            schema:
              $ref: "#/definitions/Login"                                               
      responses:
          "200":
            description: Logged
            schema:
              $ref: "#/definitions/LoginToken"
          "400":
            description: Bad request
            schema:
              type: array
              items:
                $ref: "#/definitions/ErrorResponse"                            
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      field:
        type: string
      type:
        type: string
        enum:
          - REQUEST_INVALID_FORMAT
          - BUSINESS_VALIDATION
        description: >
          Possivéis tipos de erro:
              `REQUEST_INVALID_FORMAT` - Há um paramêtro com erro na requisição 
              `BUSINESS_VALIDATION` - A requisição não passou em alguma regra de negócio
              `UNHANDLED_REQUEST_ERROR` - Erro interno de servidor
  Cliente:
    description: Dados de um cliente 
    required:
      - cpf
      - email
    properties:
      nome:
        type: string
        description: Nome do cliente que será criado
      cpf:
        type: string
        description:  CPF do cliente 
      data_nascimento:
        type: string
        description:  Data de nascimento do cliente
      email:
        type: string
        description: Email do cliente que será usado para login no cognito
        format: email
      password:
        type: string
        description: Senha do usuário que será criado no cognito
        minLength: 6
        maxLength: 20
      username:
        type: string
        description: Username que será criado no cognito
        minLength: 6
        maxLength: 20
      phoneNumber:
        type: string
        description: Numero de telefone do cliente
  ClientePostResponse:
    properties:
      id:
        type: string
        description: Id do cliente criado
  ResponseListClient:
    required:
      - total 
      - list
    properties:
      total:
        type: integer
      list:
        type: array
        items:
          $ref: "#/definitions/Cliente"      
  
  Login:
    properties:
      username:
        type: string
        description: Username do usuário que efetuará o login
      password:
        type: string
        description: Senha do usuário
        minLength: 6
        maxLength: 20
  LoginToken:
    required: 
    - "idToken"
    - "refreshToken"
    - "accessToken"
    - "clockDrift"
    properties: 
      idToken: 
        required: 
          - "jwtToken"
          - "payload"
        properties: 
          jwtToken: 
            type: "string"
          payload: 
            required: 
              - "sub"
              - "cognito:groups"
              - "email_verified"
              - "iss"
              - "phone_number_verified"
              - "cognito:username"
              - "aud"
              - "event_id"
              - "token_use"
              - "auth_time"
              - "phone_number"
              - "exp"
              - "iat"
              - "email"
            properties: 
              sub: 
                type: "string"
              cognito:groups: 
                type: "array"
                items: 
                  type: "string"
              email_verified: 
                type: "boolean"
              iss: 
                type: "string"
              phone_number_verified: 
                type: "boolean"
              cognito:username: 
                type: "string"
              aud: 
                type: "string"
              event_id: 
                type: "string"
              token_use: 
                type: "string"
              auth_time: 
                type: "number"
              phone_number: 
                type: "string"
              exp: 
                type: "number"
              iat: 
                type: "number"
              email: 
                type: "string"
            type: "object"
        type: "object"
      refreshToken: 
        required: 
          - "token"
        properties: 
          token: 
            type: "string"
        type: "object"
      accessToken: 
        required: 
          - "jwtToken"
          - "payload"
        properties: 
          jwtToken: 
            type: "string"
          payload: 
            required: 
              - "sub"
              - "device_key"
              - "cognito:groups"
              - "iss"
              - "client_id"
              - "event_id"
              - "token_use"
              - "scope"
              - "auth_time"
              - "exp"
              - "iat"
              - "jti"
              - "username"
            properties: 
              sub: 
                type: "string"
              device_key: 
                type: "string"
              cognito:groups: 
                type: "array"
                items: 
                  type: "string"
              iss: 
                type: "string"
              client_id: 
                type: "string"
              event_id: 
                type: "string"
              token_use: 
                type: "string"
              scope: 
                type: "string"
              auth_time: 
                type: "number"
              exp: 
                type: "number"
              iat: 
                type: "number"
              jti: 
                type: "string"
              username: 
                type: "string"
            type: "object"
        type: "object"
      clockDrift: 
        type: "number"


